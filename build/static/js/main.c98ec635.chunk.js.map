{"version":3,"sources":["requests.js","axios.js","Row.js","Banner.js","Movies.js","App.js","reportWebVitals.js","index.js"],"names":["API_KEY","requests","fetchtrendingmovies","fetchOriginalnetflix","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumanteMovies","instance","axios","create","baseURL","Row","title","fetchUrl","islargRow","useState","movies","setmovies","trailerUrl","setTrailerUrl","baseimg","useEffect","a","get","request","data","results","fetchData","console","log","className","map","movie","onClick","movieTrailer","name","then","url","urlParams","URLSearchParams","URL","search","catch","error","handlClick","key","id","src","poster_path","backdrop_path","alt","videoId","opts","height","width","playerVars","autoplay","Banner","setmovie","Math","floor","random","length","img","style","backgroundSize","backgroundImage","backgroundPosition","overview","Movies","setsearch","query","setquery","getmovies","fetch","response","json","rec","forEach","recipe","push","onSubmit","e","preventDefault","type","placeholder","aria-label","value","onChange","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c98ec635.chunk.js","sourcesContent":["const API_KEY = 'bbed96cafb26651d7db489d58dcc5f56';\r\n\r\nconst requests = {\r\n    fetchtrendingmovies: '/trending/movie/week?api_key=' + API_KEY + '&language=en-US',\r\n    fetchOriginalnetflix: '/trending/tv/week?api_key=' + API_KEY + '&language=en-US',\r\n    fetchTopRated: '/tv/top_rated?api_key=' + API_KEY,\r\n    fetchActionMovies: '/discover/movie?api_key=' + API_KEY + '&with_genres=28',\r\n    fetchComedyMovies: '/discover/movie?api_key=' + API_KEY + '&with_genres=35',\r\n    fetchHorrorMovies: '/discover/movie?api_key=' + API_KEY + '&with_genres=27',\r\n    fetchRomanceMovies: '/discover/movie?api_key=' + API_KEY + '&with_genres=10749',\r\n    fetchDocumanteMovies: '/discover/movie?api_key=' + API_KEY + '&with_genres=99',\r\n}\r\n\r\nexport default requests;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3',\r\n});\r\n\r\nexport default instance;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nfunction Row({ title, fetchUrl, islargRow }) {\r\n    const [movies, setmovies] = useState([]);\r\n    const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n    const baseimg = 'https://image.tmdb.org/t/p/original';\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(fetchUrl);\r\n            setmovies(request.data.results);\r\n            return request\r\n        }\r\n        fetchData();\r\n    }, [fetchUrl])\r\n\r\n    const opts = {\r\n        height: \"390\",\r\n        width: \"100%\",\r\n        playerVars: {\r\n            autoplay: 1\r\n        },\r\n    };\r\n\r\n    const handlClick = (movie) => {\r\n        if (trailerUrl) {\r\n            setTrailerUrl(\"\");\r\n        } else {\r\n            movieTrailer(movie?.name || \"\")\r\n                .then((url) => {\r\n                    const urlParams = new URLSearchParams(new URL(url).search);\r\n                    setTrailerUrl(urlParams.get(\"v\"));\r\n                }).catch((error) => console.log(error));\r\n        }\r\n    };\r\n    console.log(movies);\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <h2>{title}</h2>\r\n            <div className=\"row__posters\">\r\n                {movies.map((movie) => (\r\n                <>\r\n                    <img\r\n                        onClick={() => handlClick(movie)}\r\n                        key={movie.id}\r\n                        className=\"row__poster\"\r\n                        src={islargRow ? baseimg + movie.poster_path : baseimg + movie.backdrop_path} alt={movie.name}\r\n                    />\r\n                    \r\n                </>\r\n                ))}\r\n            </div>\r\n            {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Row;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./banner.css\"\r\n\r\nfunction Banner() {\r\n    const [movie, setmovie] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function fetchData() {\r\n            const request = await axios.get(requests.fetchOriginalnetflix);\r\n            setmovie(request.data.results[\r\n                Math.floor(Math.random() * request.data.results.length - 1)\r\n            ]\r\n            );\r\n            return request;\r\n        }\r\n        fetchData();\r\n    }, [])\r\n    const img = \"https://image.tmdb.org/t/p/original\" + movie.backdrop_path;\r\n    return (\r\n        <header className=\"banner\"\r\n            style={{\r\n                backgroundSize: \"cover\",\r\n                backgroundImage: 'url(' + img + ')',\r\n                backgroundPosition: \"center center\",\r\n            }}\r\n        >\r\n            <div className=\"banner__content\">\r\n                <h1 className=\"banner__title\">\r\n                    {movie.name}\r\n                </h1>\r\n                <h1 className=\"banner__desc\">\r\n                    {movie.overview}\r\n                </h1>\r\n            </div>\r\n            <div className=\"banner__feedbottom\"></div>\r\n        </header>\r\n    )\r\n}\r\nexport default Banner;","import React, { useEffect, useState } from \"react\";\r\nimport \"./movies.css\";\r\n\r\nconst Movies = () => {\r\n    const [movie, setmovie] = useState([]);\r\n    const [search, setsearch] = useState('');\r\n    const [query, setquery] = useState('@');\r\n\r\n    useEffect(() => {\r\n        getmovies();\r\n    }, [query]);\r\n\r\n    const getmovies = async () => {\r\n        const response = await fetch('https://api.themoviedb.org/3/search/movie?api_key=bbed96cafb26651d7db489d58dcc5f56&language=en-US&query=' + query + '&page=1&include_adult=false');\r\n        const data = await response.json();\r\n        setmovie(data.results);\r\n    };\r\n\r\n    const updateSearch = e => {\r\n        setsearch(e.target.value);\r\n    }\r\n\r\n    const getsearch = e => {\r\n        e.preventDefault();\r\n        setquery(search);\r\n        setsearch('');\r\n    }\r\n    const rec = [];\r\n    movie.forEach((recipe) => {\r\n        rec.push(\r\n            <>\r\n                <img\r\n                    className=\"img__search\"\r\n                    src={\"https://image.tmdb.org/t/p/w500\" + recipe.backdrop_path} alt=\"\" />\r\n            </>\r\n        )\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-light bg-dark justify-content-between\">\r\n                <a className=\"navbar-brand\">Movies displayer</a>\r\n                <form className=\"form-inline\" onSubmit={getsearch}>\r\n                    <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" value={search} onChange={updateSearch} />\r\n                    <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                </form>\r\n            </nav>\r\n            <div className=\"search\">{rec}</div>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Movies;","import React from \"react\"\nimport './App.css';\nimport requests from \"./requests\";\nimport Row from \"./Row\";\nimport Banner from \"./Banner\";\nimport Movies from \"./Movies\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <Movies />\n      <Banner />\n      <Row title=\"NETFLIX ORIGINALS\" fetchUrl={requests.fetchOriginalnetflix} islargRow />\n      <Row title=\"TOP TRENDING\" fetchUrl={requests.fetchtrendingmovies} />\n      <Row title=\"COMEDY MOVIES\" fetchUrl={requests.fetchComedyMovies} />\n      <Row title=\"ACTION MOVIES\" fetchUrl={requests.fetchActionMovies} />\n      <Row title=\"HORROR MOVIES\" fetchUrl={requests.fetchHorrorMovies} />\n      <Row title=\"ROMANTIC MOVIES\" fetchUrl={requests.fetchRomanceMovies} />\n      <Row title=\"DOCUMENTARY MOVIES\" fetchUrl={requests.fetchDocumanteMovies} />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<React.StrictMode><App /></React.StrictMode>,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}